module Modulo_principal_filtros #(parameter M =8 ,F =15)



( 	 input sdata,
	 input [3:0] switches_bandas,
	 input reset,
	 input clk,
    output sclk,
    output cs,
	 output [23:0] salida_de_datos
	 
    );
	 
localparam  [2:0]  e0=3'b000, 
						 e1=3'b001,
						 e2=3'b010,
						 e3=3'b011,
						 e4=3'b100,
						 e5=3'b101;
	

	reg [2:0] estado_siguiente = 3'b000,estado_actual = 3'b000;
	reg CS_1 = 1'b0;
	reg CS_2 = 1'b0;
	reg CS_3 = 1'b0;
	reg CS_4 = 1'b0;
	reg CS_5 = 1'b0;
	reg CS_6 = 1'b0;
	reg senal_al_adc = 1'b0;


always @ (posedge salida_clk_maq_princ, posedge reset )

if  (reset) 

	begin

	estado_actual <= e0 ;
			
	end

	else begin
	      
			estado_actual <= estado_siguiente;
		
	 end	
	 	
		
always @*

begin

	estado_siguiente = estado_actual;
	CS_1 = 1'b0;
	CS_2 = 1'b0;
	CS_3 = 1'b0;
	CS_4 = 1'b0;
	CS_5 = 1'b0;
	CS_6 = 1'b0;
	senal_al_adc = 1'b0;

case (estado_actual)

 e0: 
	  
	  begin
		if (ready == 1'b1)
			begin
			estado_siguiente = e1;
			end
		else 
			estado_siguiente = e0;
	  end
	  
e1: 
	  
		begin
			CS_1 = 1'b1;
			CS_2 = 1'b1;
			CS_3 = 1'b1;
			estado_siguiente = e2;
		end
		
e2: 
	  
		begin
			if ((Listo_1 == 1'b1) && (Listo_2 == 1'b1) && (Listo_3 == 1'b1))
			estado_siguiente = e3;
			else
			estado_siguiente = e2;
		end
		
e3: 
	  
		begin
			CS_4 = 1'b1;
			CS_5 = 1'b1;
			CS_6 = 1'b1;
			estado_siguiente = e4;
		end
		
e4: 
	  
		begin
			if ((Listo_4 == 1'b1) && (Listo_5 == 1'b1) && (Listo_6 == 1'b1))
			estado_siguiente = e5;
			else
			estado_siguiente = e4;
		end
		
e5: 
	  
		begin
			senal_al_adc = 1'b1;
			estado_siguiente = e0;
		end

endcase

end	 

wire [3:0] salida_eliminador_reb;
wire [11:0] datos_salida_adc_interf;
wire ready; 
wire [M+F:0]datos_salida_pasoalto_20Hz;
wire [M+F:0]datos_salida_pasoalto_200Hz;
wire [M+F:0]datos_salida_pasoalto_5kHz;
wire [M+F:0]concatenador_20Hz_sal;
wire [M+F:0]concatenador_200Hz_sal;
wire [M+F:0]concatenador_5kHz_sal;
wire [M+F:0] salida_filtro_20Hz_PB;
wire [M+F:0] salida_filtro_200Hz_PB;
wire [M+F:0] salida_filtro_5kHz_PB;
wire [M+F:0] salida_filtro_200Hz_PA;
wire [M+F:0] salida_filtro_5kHz_PA;
wire [M+F:0] salida_filtro_20kHz_PA;
wire [M+F:0] salida_sumador_1;
wire [M+F:0] salida_sumado_todo;
wire [1:0] salidas_para_seleccion;
wire [M+F:0] dato_salida_MUX;
wire Listo_1; 
wire Listo_2;
wire Listo_3;
wire Listo_4;
wire Listo_5;
wire Listo_6;

wire salida_clk_eliminador;
wire clk_filtros;
wire salida_clk_maq_princ;
wire salida_clk_ADC;

Divisor_clk_ADC Div_ADC (.clk(clk),.rst(reset),.clk_out(salida_clk_ADC));

Divisor_filtros Div_general (.clk(clk),.rst(reset),.clk_out(clk_filtros));

Divisor_Maq_Principal Div_principal(.clk(clk),.rst(reset),.clk_out(salida_clk_maq_princ));

Reloj_Eliminador Reloj_rebotes (.clk(clk),.rst(reset),.clk_out(salida_clk_eliminador));

Eliminador_rebotes Eliminador_entrada (.inboton(switches_bandas), .cclk(salida_clk_eliminador), .clr(reset), .outboton(salida_eliminador_reb));

ADC_interfaz ADC_entrada (.clk(salida_clk_ADC),.sdata(sdata),.sclk(sclk),.cs(cs),.ready(ready),.dato_salida(datos_salida_adc_interf),.senal_al_adc(senal_al_adc));

Concatenador_filtros Concatenador_filtro_20Hz_PB (.datos_adc(datos_salida_adc_interf),.salida_datos_adc(concatenador_20Hz_sal));

//Filtros:

//Filtros pasoaltos:

Filtro Filtro_20_Hz_PA (.A1(24'b000000001111111101111101), .A2(24'b111111111000000010000100), .B0(24'b000000000111111110111110), .B1(24'b111111110000000010000100), .B2(24'b000000000111111110111110), .clk(clk_filtros), .reset(reset), .CS(CS_1), .Datos_entrada(concatenador_20Hz_sal), .Datos_salida(salida_filtro_20Hz_PB), .Listo(Listo_1));
Filtro Filtro_200_Hz_PA (.A1(24'b000000001111101011100001), .A2(24'b111111111000010100001111), .B0(24'b000000001000000000000000), .B1(24'b111111110000000000000000), .B2(24'b000000001000000000000000), .clk(clk_filtros), .reset(reset), .CS(CS_2), .Datos_entrada(concatenador_20Hz_sal), .Datos_salida(salida_filtro_200Hz_PB), .Listo(Listo_2));
Filtro Filtro_5kHz_PA (.A1(24'b000000001000010001111011), .A2(24'b111111111101000011101100), .B0(24'b000000000100110011100011), .B1(24'b111111110110011001000110), .B2(24'b000000000100110011100011), .clk(clk_filtros), .reset(reset), .CS(CS_3), .Datos_entrada(concatenador_20Hz_sal), .Datos_salida(salida_filtro_5kHz_PB), .Listo(Listo_3));

//Filtros pasobajos: 

Filtro Filtro_200_Hz_PB (.A1(24'b000000001111101011100001), .A2(24'b111111111000010100001111), .B0(24'b000000000000000000000110), .B1(24'b000000000000000000001101), .B2(24'b000000000000000000000110), .clk(clk_filtros), .reset(reset), .CS(CS_4), .Datos_entrada(salida_filtro_20Hz_PB), .Datos_salida(salida_filtro_200Hz_PA), .Listo(Listo_4));
Filtro Filtro_5kHz_PB (.A1(24'b000000001000010001111011), .A2(24'b111111111101000011101100), .B0(24'b000000000000101010100100), .B1(24'b000000000001010101001001), .B2(24'b000000000000101010100100), .clk(clk_filtros), .reset(reset), .CS(CS_5), .Datos_entrada(salida_filtro_200Hz_PB), .Datos_salida(salida_filtro_5kHz_PA), .Listo(Listo_5));
Filtro Filtro_20kHz_PB (.A1(24'b111111110011010001011011), .A2(24'b111111111010101101001110), .B0(24'b000000000110100000010110), .B1(24'b000000001101000000100000), .B2(24'b000000000110100000010110), .clk(clk_filtros), .reset(reset), .CS(CS_6), .Datos_entrada(salida_filtro_5kHz_PB), .Datos_salida(salida_filtro_20kHz_PA), .Listo(Listo_6));
																																																	

Deco_Mux_Sumadores Deco_Mux (.Entradas(salida_eliminador_reb),.Salidas(salidas_para_seleccion));
Sumador Sumador_1 (.Dato_A(salida_filtro_200Hz_PA),.Dato_B(salida_filtro_5kHz_PA),.Salida(salida_sumador_1));
Sumador Sumador_2 (.Dato_A(salida_filtro_20kHz_PA),.Dato_B(salida_sumador_1),.Salida(salida_sumado_todo));
MUX_4_entradas MUX_seleccion_filtro_salida (.Dato_1(salida_filtro_200Hz_PA),.Dato_2(salida_filtro_5kHz_PA),.Dato_3(salida_filtro_20kHz_PA),.Dato_4(salida_sumado_todo),.Salida(dato_salida_MUX),.Seleccion(salidas_para_seleccion));

assign salida_de_datos = dato_salida_MUX;
		

endmodule

