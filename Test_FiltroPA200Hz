

module Test_FiltroPA200Hz;

	// Inputs
	reg [23:0] A1;
	reg [23:0] A2;
	reg [23:0] B0;
	reg [23:0] B1;
	reg [23:0] B2;
	reg clk;
	reg reset;
	reg CS;
	reg [23:0] Datos_entrada;

	// Outputs
	wire [23:0] Datos_salida;
	wire Listo;
	
	reg [23:0] ENTRADA [0:43];
	integer i;
	integer FileSaveData;

	wire [23:0] salida_reg_multi;
	wire [23:0] salida_reg_suma;
	wire [2:0] estado_actual;
	wire [23:0] salida_reg_multi_b1_por_fNmenos1;
	wire [23:0] salida_F;
	wire [23:0] salida_FNmenos1;
	wire [23:0] salida_FNmenos2;
	wire [23:0] datos_salida_sumador;
	wire [23:0] datos_salida_multiplicador;

	// Instantiate the Unit Under Test (UUT)
	Filtro uut (
		.A1(A1), 
		.A2(A2), 
		.B0(B0), 
		.B1(B1), 
		.B2(B2), 
		.clk(clk), 
		.reset(reset), 
		.CS(CS), 
		.Datos_entrada(Datos_entrada), 
		.Datos_salida(Datos_salida), 
		.Listo(Listo), 
		.salida_reg_multi(salida_reg_multi), 
		.salida_reg_suma(salida_reg_suma), 
		.estado_actual(estado_actual), 
		.salida_reg_multi_b1_por_fNmenos1(salida_reg_multi_b1_por_fNmenos1), 
		.salida_F(salida_F), 
		.salida_FNmenos1(salida_FNmenos1), 
		.salida_FNmenos2(salida_FNmenos2), 
		.datos_salida_sumador(datos_salida_sumador),
		.datos_salida_multiplicador(datos_salida_multiplicador)
	);

initial begin
		
		$readmemb("2rampa1000Hz44.txt", ENTRADA);
		FileSaveData = $fopen("salidaPA200Hz.txt","w");
		A1 = 24'b000000001111101011100001; 
		A2 = 24'b111111111000010100001111; 
		B0 = 24'b000000001000000000000000; 
		B1 = 24'b111111110000000000000000; 
		B2 = 24'b000000001000000000000000; 
		clk = 0;
		reset = 0;
		CS = 0;
		Datos_entrada = 0;
		
		//Mandar los datos en forma serial
		for (i = 0; i < 45; i = i + 1) begin    // varia conforme el tamaÃ±o del arreglo en in.txt
			//for (j = 0; j < 23; j = j + 1) begin
				$fwrite(FileSaveData,"%b\n", Datos_salida);
				 Datos_entrada = ENTRADA[i];
				
				#30;
				CS = 1'b1;
				#25;
				CS=1'b0;
				
				#180;
				
			end
			
		$fclose(FileSaveData);
		$finish;
	
	end
	

		
	initial forever #10 clk = ~clk;

      
endmodule

